# ===== Project info

[project]
dynamic = ["version"]
name = "wgpu"
description = "WebGPU for Python"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Almar Klein" }, { name = "Korijn van Golen" }]
keywords = ["webgpu", "wgpu", "vulkan", "metal", "DX12", "opengl"]
requires-python = ">= 3.8"
dependencies = ["cffi>=1.15.0", "rubicon-objc>=0.4.1; sys_platform == 'darwin'"]

[project.optional-dependencies]
jupyter = ["jupyter_rfb>=0.4.2"]
glfw = ["glfw>=1.9"]
docs = ["sphinx>7.2", "sphinx_rtd_theme"]
imgui = ["imgui-bundle>=1.2.1"]

[project.entry-points."pyinstaller40"]
hook-dirs = "wgpu.__pyinstaller:get_hook_dirs"
tests = "wgpu.__pyinstaller:get_test_dirs"

[project.urls]
Homepage = "https://github.com/pygfx/wgpu-py"
Documentation = "https://wgpu-py.readthedocs.io"
Repository = "https://github.com/pygfx/wgpu-py"

# ===== Building
#
# We use the hatch build backend, because its modern, with pretty good defaults,
# and configurable. Flit is really nice, but a bit too simple for what we need
# with our binary libs. We use a hatch build hook to install the correct
# wgpu-native lib right before the wheel is build. See the tools dir.

[build-system]
requires = ["requests", "hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "wgpu/__init__.py"

[tool.hatch.build.targets.sdist]
packages = ["wgpu"]
exclude = ["*.so", "*.dll", "*.dylib"]

[tool.hatch.build.targets.wheel]
packages = ["wgpu"]
artifacts = ["*.so", "*.dll", "*.dylib"]

[tool.hatch.build.targets.wheel.hooks.custom]
path = "tools/hatch_build.py"

# ===== Tooling
